package day05_teacher_code.src;

public class LoopExercise2 {
    public static void main(String[] args) {
        //一个数如果恰好等于它的因子之和，这个数就称为"完数"。（因子：除去这个数本身的约数）
        //例如6=1＋2＋3.编程 找出1000以内的所有完数
        /*
        程序员的笔试题中：素数、水仙花数、完数、公约数、公倍数、......
        例如：6的约数（可以把6整除的数）有哪些？1,2,3,6
             6的因子（因子：除去这个数本身的约数）1,2,3
             6 = 1 + 2 + 3 是完数
        例如：8的约数：1,2,4,8
             8的因子：1,2,4
             8 != 1 + 2 + 4 不是完数

         思路：
            （1）循环范围 1- 1000  ，for(int i=1; i<=1000; i++)
            （2）每次循环体
                            int sum = 0;
                A:找出i的因子，在[1,i)范围内找i的因子  for(int j=1; j<i; j++)
                          i%j==0，说明j是i的因子
                B：累加i的因子
                            sum+=j;
                C:判断 sum == i 是否相等，条件成立就是完数

         */
//        int sum = 0;  定义在外部循环之外，导致每次循环计算下一个数的因子和时，sum会保留上一次计算的结果，而不是重新开始计算
//        6 的因子和后，sum的值是 6，当计算下一个数 7 时，sum会在 6 的基础上继续累加，导致结果错误
        for(int i=1; i<=1000; i++){
            int sum = 0;
            for(int j=1; j<i; j++){
                if(i%j==0){
                    sum +=j;
                }
            }

            if(sum == i){
                System.out.println(i +"是完数");
            }
        }

    }
}
